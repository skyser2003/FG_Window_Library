CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
IF(NOT DEFINED PROJECT_NAME)
	SET(PROJECT_NAME "WindowLibrary")
	PROJECT(${PROJECT_NAME})
ENDIF()
LIST( APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake" )
INCLUDE( pch_support )

#SET(CMAKE_C++_CREATE_STATIC_LIBRARY 1)

IF(NOT DEFINED WL_ROOT_DIR)
	SET(WL_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
ENDIF()

SET (WL_SOURCE_DIR "${WL_ROOT_DIR}/source")
SET (WL_PCH_SUBDIR ${WL_SOURCE_DIR}/stdafx)
SET (WL_PCH_NAME "stdafx")
SET (WL_PCH_HEADER ${WL_PCH_NAME}.h)
SET (WL_PCH_CPP ${WL_PCH_NAME}.cpp)
SET (WL_PCH_BIN ${WL_PCH_NAME}.pch)

# External libraries include location
IF(NOT DEFINED IM_ROOT_DIR)
	SET(IM_ROOT_DIR "${WL_ROOT_DIR}/../FG_Input_Library")
ENDIF()

IF(NOT DEFINED IM_SOURCE_DIR)
	SET(IM_SOURCE_DIR "${IM_ROOT_DIR}/source")
ENDIF()

IF(NOT DEFINED DX_ROOT_DIR)
	SET(DX_ROOT_DIR "${WL_ROOT_DIR}/../FG_DX_Engine")
ENDIF()

IF(NOT DEFINED DX_SOURCE_DIR)
	SET(DX_SOURCE_DIR "${DX_ROOT_DIR}/source")
ENDIF()


SET(WL_SOURCE_SUBDIRS 
"stdafx"
"Window"
"WindowManager"
)

SET(WL_SOURCE_FILES "")
FOREACH(subdir ${WL_SOURCE_SUBDIRS})
	FILE(GLOB TEMP ${WL_SOURCE_DIR}/${subdir}/*.cpp ${WL_SOURCE_DIR}/${subdir}/*.h)
	SET(WL_SOURCE_FILES ${WL_SOURCE_FILES} ${TEMP})
ENDFOREACH()

ADD_LIBRARY (WindowLibrary
${WL_SOURCE_FILES}
)
FOREACH(subdir ${WL_SOURCE_SUBDIRS})
    SOURCE_GROUP(${subdir} FILES ${WL_SOURCE_DIR}/${subdir}/*.cpp ${WL_SOURCE_DIR}/${subdir}/*.h)
ENDFOREACH()

INCLUDE_DIRECTORIES( ${WL_SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${WL_PCH_SUBDIR} )
INCLUDE_DIRECTORIES( ${IM_SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${DX_SOURCE_DIR} )
INCLUDE_DIRECTORIES( "$ENV{DXSDK_DIR}Include" )

MSVC_SET_PCH(WindowLibrary
${WL_PCH_SUBDIR}/${WL_PCH_HEADER}
${WL_PCH_SUBDIR}/${WL_PCH_CPP}
)

SET_TARGET_PROPERTIES(WindowLibrary PROPERTIES LINKER_LANGUAGE C++)